<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>