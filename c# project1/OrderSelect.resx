<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        d7bZ/g+TZCiXf5i5vAAAAABJRU5ErkJggg==
</value>
  </data>
</root>